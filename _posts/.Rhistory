length(prime(888))
setwd("~/Dropbox/Courses/Georgia/Undergrad Econometrics/Detailed Course Notes")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
D <- sample(c(0,1), size=n, repeat=TRUE)
lapply(1:n, function(i)
data.frame(Y=bi[i]*1:time.periods + etai[i] + rnorm(time.periods)))
n <- 1000
D <- sample(c(0,1), size=n, repeat=TRUE)
bi <- rnorm(n) + D
etai <- rnorm(n) + D
time.periods <- 25
tstar <- 5
lapply(1:n, function(i)
data.frame(Y=bi[i]*1:time.periods + etai[i] + rnorm(time.periods)))
n <- 1000
D <- sample(c(0,1), size=n, repeat=TRUE)
n <- 1000
D <- sample(c(0,1), size=n, replace=TRUE)
bi <- rnorm(n) + D
etai <- rnorm(n) + D
time.periods <- 25
tstar <- 5
lapply(1:n, function(i)
data.frame(Y=bi[i]*1:time.periods + etai[i] + rnorm(time.periods)))
data_list <- lapply(1:n,
function(i) data.frame(Y=bi[i]*1:time.periods + etai[i] + rnorm(time.periods)))
data <- do.call(data_list, "rbind")
data <- do.call("rbind", data_list)
nrow(data)
head(data)
data_list <- lapply(1:n,
function(i) data.frame(Y=bi[i]*1:time.periods + etai[i] + rnorm(time.periods),
id=i,
time.period=1:time.periods))
data <- do.call("rbind", data_list)
head(data_list)
head(data)
data_list <- lapply(1:n,
function(i) data.frame(Y=bi[i]*1:time.periods + etai[i] + rnorm(time.periods),
id=i,
time.period=1:time.periods,
treat=D[i]))
data <- do.call("rbind", data_list)
head(data)
data <- do.call("rbind", data_list)
data$group <- group$treat*tstar
data$group <- group$treat*tstar
data$group <- data$treat*tstar
librar(did)
library(did)
att_gt("Y", "time.period", "id", "group", data=data)
ggdid(res)
res <- att_gt("Y", "time.period", "id", "group", data=data)
ggdid(res)
n <- 1000
D <- sample(c(0,1), size=n, replace=TRUE)
bi <- rnorm(n) + D
etai <- rnorm(n) + D
time.periods <- 25
tstar <- 10
data_list <- lapply(1:n,
function(i) data.frame(Y=bi[i]*1:time.periods + etai[i] + rnorm(time.periods),
id=i,
time.period=1:time.periods,
treat=D[i]))
data <- do.call("rbind", data_list)
data$group <- data$treat*tstar
library(did)
res <- att_gt("Y", "time.period", "id", "group", data=data)
ggdid(res)
data$group <- 2
res2 <- att_gt("Y", "time.period", "id", "group", data=data)
ggdid(res2)
data$group <- data$treat*2
res2 <- att_gt("Y", "time.period", "id", "group", data=data)
ggdid(res2)
library(did)
library(plm)
library(ggplot2)
library(tidyr)
# time periods
time.periods <- 10
# number of treated units
nt <- 1000
# time fixed effect
thet <<- seq(1:time.periods)
# number of untreated units
nu <- 1000
#-----------------------------------------------------------------------------
# parameters for treated potential outcomes
#-----------------------------------------------------------------------------
dynamics <- rep(0,time.periods) # no dynamic effects
te <- -1 # overall basic effect
timing <- 10
build_sim_dataset <- function() {
#-----------------------------------------------------------------------------
# build dataset
#-----------------------------------------------------------------------------
# draw individual fixed effect for treated group
Ct <- rep(1,nt) #+ rnorm(nt, mean=1)
G <- rep(timing, 5)
# generate untreated potential outcomes in each time period
Ynames <- paste0("Y",1:time.periods)
Ynames <- paste0(1:time.periods)
Y0tmat <- sapply(1:time.periods, function(t) {
thet[t] + Ct + dynamics[t] #+ rnorm(nt)
})
Y0tdf <- as.data.frame(Y0tmat)
# generate treated potential outcomes
Y1tdf <- sapply(1:time.periods, function(t) {
thet[t] + Ct + te + dynamics[t] #+ rnorm(nt)# + (G <= t)*te.e[sapply(1:nt, function(i) max(t-G[i]+1,1))] + te + rnorm(nt) # hack for the dynamic effects but ok
})
# generate observed data
Ytdf <- sapply(1:time.periods, function(t) {
(G<=t)*Y1tdf[,t] + (G>t)*Y0tdf[,t]
})
colnames(Ytdf) <- Ynames
# store observed data for treated group
dft <- cbind.data.frame(G,Ytdf)
# untreated units
# draw untreated fixed effect
Cu <- rep(0, nu) #+ rnorm(nu)
# generate untreated potential outcomes
Y0umat <- sapply(1:time.periods, function(t) {
thet[t] + Cu #+ rnorm(nu)
})
Y0udf <- as.data.frame(Y0umat)
colnames(Y0udf) <- Ynames
# store dataset of observed outcomes for untreated units
dfu <- cbind.data.frame(G=0,Y0udf)
# store overall dataset
df <- rbind.data.frame(dft, dfu)
# generate id variable
df$id <- 1:nrow(df)
# convert data from wide to long format
ddf <- gather(df, period, Y, -G, -id)
ddf$period <- as.numeric(ddf$period)
ddf$treat <- 1*(ddf$G > 0)
ddf <- ddf[order(ddf$id, ddf$period),] # reorder data
ddf
}
did_and_reg_es <- function() {
data <- build_sim_dataset()
data$e <- ifelse(data$G > 0, data$period - data$G, -Inf)
relative_time_df <- model.matrix(~-1 + as.factor(e), data=data)
colnames(relative_time_df) = c("nevertreated", "pre9", "pre8", "pre7", "pre6",
"pre5", "pre4", "pre3", "pre2", "pre1", "post0")
relative_time_df <- dplyr::select(as.data.frame(relative_time_df), -nevertreated, -pre1)
data <- cbind.data.frame(data, relative_time_df)
es_reg <- plm(Y ~ pre9 + pre8 + pre7 + pre6 + pre5 + pre4 + pre3 + pre2 + post0, effect="twoways", model="within", data=data, index=c("id","period"))
reg_es <- coef(es_reg)
reg_es <- append(reg_es, 0, after=(timing-2))
reg_es <- tibble(e=seq(-9,0), atte=reg_es)
attgt_res <- att_gt(yname="Y",
tname="period",
idname="id",
gname="G",
data=data)
did_es <- aggte(attgt_res, type="dynamic")
did_es <- tibble(e=did_es$egt, atte=did_es$att.egt)
did_es$post <- as.factor(1*(did_es$e >= 0))
reg_es$post <- as.factor(1*(reg_es$e >= 0))
did_plot <- ggplot(did_es, aes(x=e, y=atte, color=post)) +
geom_line() +
geom_point() +
xlab("e") +
ylab("att") +
ylim(c(-1,1)) +
scale_x_continuous(breaks=seq(-9,0)) +
theme_bw() +
theme(legend.position="bottom")
reg_plot <- ggplot(reg_es, aes(x=e, y=atte, color=post)) +
geom_line() +
geom_point() +
xlab("e") +
ylab("att") +
ylim(c(-1,1)) +
scale_x_continuous(breaks=seq(-9,0)) +
theme_bw() +
theme(legend.position="bottom")
ggpubr::ggarrange(did_plot,reg_plot)
}
did_and_reg_es()
dynamics
timing
dynamics[1:9] <- 1
did_and_reg_es()
dynamics
# add anticipation
dynamics[(timing-1)] <- -0.5
did_and_reg_es()
dynamics
dynamics <- 0
dynamics
#-----------------------------------------------------------------------------
# parameters for treated potential outcomes
#-----------------------------------------------------------------------------
dynamics <- rep(0,time.periods) # no dynamic effects
did_and_reg_es <- function() {
data <- build_sim_dataset()
data$e <- ifelse(data$G > 0, data$period - data$G, -Inf)
relative_time_df <- model.matrix(~-1 + as.factor(e), data=data)
colnames(relative_time_df) = c("nevertreated", "pre9", "pre8", "pre7", "pre6",
"pre5", "pre4", "pre3", "pre2", "pre1", "post0")
relative_time_df <- dplyr::select(as.data.frame(relative_time_df), -nevertreated, -pre1)
data <- cbind.data.frame(data, relative_time_df)
es_reg <- plm(Y ~ pre9 + pre8 + pre7 + pre6 + pre5 + pre4 + pre3 + pre2 + post0, effect="twoways", model="within", data=data, index=c("id","period"))
reg_es <- coef(es_reg)
reg_es <- append(reg_es, 0, after=(timing-2))
reg_es <- tibble(e=seq(-9,0), atte=reg_es)
attgt_res <- att_gt(yname="Y",
tname="period",
idname="id",
gname="G",
data=data)
did_es <- aggte(attgt_res, type="dynamic")
did_es <- tibble(e=did_es$egt, atte=did_es$att.egt)
did_es$post <- as.factor(1*(did_es$e >= 0))
reg_es$post <- as.factor(1*(reg_es$e >= 0))
did_plot <- ggplot(did_es, aes(x=e, y=atte, color=post)) +
geom_line() +
geom_point() +
xlab("e") +
ylab("att") +
ylim(c(-1,1)) +
scale_x_continuous(breaks=seq(-9,0)) +
theme_bw() +
theme(legend.position="bottom")
reg_plot <- ggplot(reg_es, aes(x=e, y=atte, color=post)) +
geom_line() +
geom_point() +
xlab("e") +
ylab("att") +
ylim(c(-1,1)) +
scale_x_continuous(breaks=seq(-9,0)) +
theme_bw() +
theme(legend.position="bottom")
ggpubr::ggarrange(did_plot,reg_plot)
}
# add anticipation
dynamics[(timing-1)] <- -0.5
did_and_reg_es()
dynamics <- seq(1,10)
did_and_reg_es()
build_sim_dataset <- function() {
#-----------------------------------------------------------------------------
# build dataset
#-----------------------------------------------------------------------------
# draw individual fixed effect for treated group
Ct <- rep(1,nt) #+ rnorm(nt, mean=1)
G <- rep(timing, 5)
# generate untreated potential outcomes in each time period
Ynames <- paste0("Y",1:time.periods)
Ynames <- paste0(1:time.periods)
Y0tmat <- sapply(1:time.periods, function(t) {
thet[t] + Ct + dynamics[t] + rnorm(nt,sd=.1)
})
Y0tdf <- as.data.frame(Y0tmat)
# generate treated potential outcomes
Y1tdf <- sapply(1:time.periods, function(t) {
thet[t] + Ct + te + dynamics[t] + rnorm(nt,sd=.1)# + (G <= t)*te.e[sapply(1:nt, function(i) max(t-G[i]+1,1))] + te + rnorm(nt) # hack for the dynamic effects but ok
})
# generate observed data
Ytdf <- sapply(1:time.periods, function(t) {
(G<=t)*Y1tdf[,t] + (G>t)*Y0tdf[,t]
})
colnames(Ytdf) <- Ynames
# store observed data for treated group
dft <- cbind.data.frame(G,Ytdf)
# untreated units
# draw untreated fixed effect
Cu <- rep(0, nu) #+ rnorm(nu)
# generate untreated potential outcomes
Y0umat <- sapply(1:time.periods, function(t) {
thet[t] + Cu + rnorm(nu,sd=.1)
})
Y0udf <- as.data.frame(Y0umat)
colnames(Y0udf) <- Ynames
# store dataset of observed outcomes for untreated units
dfu <- cbind.data.frame(G=0,Y0udf)
# store overall dataset
df <- rbind.data.frame(dft, dfu)
# generate id variable
df$id <- 1:nrow(df)
# convert data from wide to long format
ddf <- gather(df, period, Y, -G, -id)
ddf$period <- as.numeric(ddf$period)
ddf$treat <- 1*(ddf$G > 0)
ddf <- ddf[order(ddf$id, ddf$period),] # reorder data
ddf
}
did_and_reg_es <- function() {
data <- build_sim_dataset()
data$e <- ifelse(data$G > 0, data$period - data$G, -Inf)
relative_time_df <- model.matrix(~-1 + as.factor(e), data=data)
colnames(relative_time_df) = c("nevertreated", "pre9", "pre8", "pre7", "pre6",
"pre5", "pre4", "pre3", "pre2", "pre1", "post0")
relative_time_df <- dplyr::select(as.data.frame(relative_time_df), -nevertreated, -pre1)
data <- cbind.data.frame(data, relative_time_df)
es_reg <- plm(Y ~ pre9 + pre8 + pre7 + pre6 + pre5 + pre4 + pre3 + pre2 + post0, effect="twoways", model="within", data=data, index=c("id","period"))
reg_es <- coef(es_reg)
reg_es <- append(reg_es, 0, after=(timing-2))
reg_es <- tibble(e=seq(-9,0), atte=reg_es)
attgt_res <- att_gt(yname="Y",
tname="period",
idname="id",
gname="G",
data=data)
did_es <- aggte(attgt_res, type="dynamic")
did_es <- tibble(e=did_es$egt, atte=did_es$att.egt)
did_es$post <- as.factor(1*(did_es$e >= 0))
reg_es$post <- as.factor(1*(reg_es$e >= 0))
did_plot <- ggplot(did_es, aes(x=e, y=atte, color=post)) +
geom_line() +
geom_point() +
xlab("e") +
ylab("att") +
ylim(c(-1,1)) +
scale_x_continuous(breaks=seq(-9,0)) +
theme_bw() +
theme(legend.position="bottom")
reg_plot <- ggplot(reg_es, aes(x=e, y=atte, color=post)) +
geom_line() +
geom_point() +
xlab("e") +
ylab("att") +
ylim(c(-1,1)) +
scale_x_continuous(breaks=seq(-9,0)) +
theme_bw() +
theme(legend.position="bottom")
ggpubr::ggarrange(did_plot,reg_plot)
}
dynamics
did_and_reg_es()
did_and_reg_es <- function() {
data <- build_sim_dataset()
data$e <- ifelse(data$G > 0, data$period - data$G, -Inf)
relative_time_df <- model.matrix(~-1 + as.factor(e), data=data)
colnames(relative_time_df) = c("nevertreated", "pre9", "pre8", "pre7", "pre6",
"pre5", "pre4", "pre3", "pre2", "pre1", "post0")
relative_time_df <- dplyr::select(as.data.frame(relative_time_df), -nevertreated, -pre1)
data <- cbind.data.frame(data, relative_time_df)
es_reg <- plm(Y ~ pre9 + pre8 + pre7 + pre6 + pre5 + pre4 + pre3 + pre2 + post0, effect="twoways", model="within", data=data, index=c("id","period"))
reg_es <- coef(es_reg)
reg_es <- append(reg_es, 0, after=(timing-2))
reg_es <- tibble(e=seq(-9,0), atte=reg_es)
attgt_res <- att_gt(yname="Y",
tname="period",
idname="id",
gname="G",
data=data)
did_es <- aggte(attgt_res, type="dynamic")
did_es <- tibble(e=did_es$egt, atte=did_es$att.egt)
did_es$post <- as.factor(1*(did_es$e >= 0))
reg_es$post <- as.factor(1*(reg_es$e >= 0))
did_plot <- ggplot(did_es, aes(x=e, y=atte, color=post)) +
geom_line() +
geom_point() +
xlab("e") +
ylab("att") +
#ylim(c(-1,1)) +
scale_x_continuous(breaks=seq(-9,0)) +
theme_bw() +
theme(legend.position="bottom")
reg_plot <- ggplot(reg_es, aes(x=e, y=atte, color=post)) +
geom_line() +
geom_point() +
xlab("e") +
ylab("att") +
#ylim(c(-1,1)) +
scale_x_continuous(breaks=seq(-9,0)) +
theme_bw() +
theme(legend.position="bottom")
ggpubr::ggarrange(did_plot,reg_plot)
}
did_and_reg_es()
build_sim_dataset <- function() {
#-----------------------------------------------------------------------------
# build dataset
#-----------------------------------------------------------------------------
# draw individual fixed effect for treated group
Ct <- rep(1,nt) #+ rnorm(nt, mean=1)
G <- rep(timing, 5)
# generate untreated potential outcomes in each time period
Ynames <- paste0("Y",1:time.periods)
Ynames <- paste0(1:time.periods)
Y0tmat <- sapply(1:time.periods, function(t) {
thet[t] + Ct + dynamics[t] + rnorm(nt,sd=.1)
})
Y0tdf <- as.data.frame(Y0tmat)
# generate treated potential outcomes
Y1tdf <- sapply(1:time.periods, function(t) {
thet[t] + Ct + te + dynamics[t] + rnorm(nt,sd=.1)# + (G <= t)*te.e[sapply(1:nt, function(i) max(t-G[i]+1,1))] + te + rnorm(nt) # hack for the dynamic effects but ok
})
# generate observed data
Ytdf <- sapply(1:time.periods, function(t) {
(G<=t)*Y1tdf[,t] + (G>t)*Y0tdf[,t]
})
colnames(Ytdf) <- Ynames
# store observed data for treated group
dft <- cbind.data.frame(G,Ytdf)
# untreated units
# draw untreated fixed effect
Cu <- rep(0, nu) #+ rnorm(nu)
# generate untreated potential outcomes
Y0umat <- sapply(1:time.periods, function(t) {
thet[t] + Cu + rnorm(nu,sd=.1)
})
Y0udf <- as.data.frame(Y0umat)
colnames(Y0udf) <- Ynames
# store dataset of observed outcomes for untreated units
dfu <- cbind.data.frame(G=0,Y0udf)
# store overall dataset
df <- rbind.data.frame(dft, dfu)
# generate id variable
df$id <- 1:nrow(df)
# convert data from wide to long format
ddf <- gather(df, period, Y, -G, -id)
ddf$period <- as.numeric(ddf$period)
ddf$treat <- 1*(ddf$G > 0)
ddf <- ddf[order(ddf$id, ddf$period),] # reorder data
ddf
}
did_and_reg_es <- function() {
data <- build_sim_dataset()
data$e <- ifelse(data$G > 0, data$period - data$G, -Inf)
relative_time_df <- model.matrix(~-1 + as.factor(e), data=data)
colnames(relative_time_df) = c("nevertreated", "pre9", "pre8", "pre7", "pre6",
"pre5", "pre4", "pre3", "pre2", "pre1", "post0")
relative_time_df <- dplyr::select(as.data.frame(relative_time_df), -nevertreated, -pre1)
data <- cbind.data.frame(data, relative_time_df)
es_reg <- plm(Y ~ pre9 + pre8 + pre7 + pre6 + pre5 + pre4 + pre3 + pre2 + post0, effect="twoways", model="within", data=data, index=c("id","period"))
reg_es <- coef(es_reg)
reg_es <- append(reg_es, 0, after=(timing-2))
reg_es <- tibble(e=seq(-9,0), atte=reg_es)
attgt_res <- att_gt(yname="Y",
tname="period",
idname="id",
gname="G",
data=data)
did_es <- aggte(attgt_res, type="dynamic")
did_es <- tibble(e=did_es$egt, atte=did_es$att.egt)
did_es$post <- as.factor(1*(did_es$e >= 0))
reg_es$post <- as.factor(1*(reg_es$e >= 0))
did_plot <- ggplot(did_es, aes(x=e, y=atte, color=post)) +
geom_line() +
geom_point() +
xlab("e") +
ylab("att") +
#ylim(c(-1,1)) +
scale_x_continuous(breaks=seq(-9,0)) +
theme_bw() +
theme(legend.position="bottom")
reg_plot <- ggplot(reg_es, aes(x=e, y=atte, color=post)) +
geom_line() +
geom_point() +
xlab("e") +
ylab("att") +
#ylim(c(-1,1)) +
scale_x_continuous(breaks=seq(-9,0)) +
theme_bw() +
theme(legend.position="bottom")
ggpubr::ggarrange(did_plot,reg_plot)
}
did_and_reg_es()
debug(did_and_reg_es)
did_and_reg_es <- function() {
data <- build_sim_dataset()
data$e <- ifelse(data$G > 0, data$period - data$G, -Inf)
relative_time_df <- model.matrix(~-1 + as.factor(e), data=data)
colnames(relative_time_df) = c("nevertreated", "pre9", "pre8", "pre7", "pre6",
"pre5", "pre4", "pre3", "pre2", "pre1", "post0")
relative_time_df <- dplyr::select(as.data.frame(relative_time_df), -nevertreated, -pre1)
data <- cbind.data.frame(data, relative_time_df)
es_reg <- plm(Y ~ pre9 + pre8 + pre7 + pre6 + pre5 + pre4 + pre3 + pre2 + post0, effect="twoways", model="within", data=data, index=c("id","period"))
reg_es <- coef(es_reg)
reg_es <- append(reg_es, 0, after=(timing-2))
reg_es <- tibble(e=seq(-9,0), atte=reg_es)
attgt_res <- att_gt(yname="Y",
tname="period",
idname="id",
gname="G",
data=data)
did_es <- aggte(attgt_res, type="dynamic")
did_es <- tibble(e=did_es$egt, atte=did_es$att.egt)
did_es$post <- as.factor(1*(did_es$e >= 0))
reg_es$post <- as.factor(1*(reg_es$e >= 0))
did_plot <- ggplot(did_es, aes(x=e, y=atte, color=post)) +
geom_line() +
geom_point() +
xlab("e") +
ylab("att") +
#ylim(c(-1,1)) +
scale_x_continuous(breaks=seq(-9,0)) +
theme_bw() +
theme(legend.position="bottom")
reg_plot <- ggplot(reg_es, aes(x=e, y=atte, color=post)) +
geom_line() +
geom_point() +
xlab("e") +
ylab("att") +
#ylim(c(-1,1)) +
scale_x_continuous(breaks=seq(-9,0)) +
theme_bw() +
theme(legend.position="bottom")
ggpubr::ggarrange(did_plot,reg_plot)
}
did_and_reg_es()
debug(did_and_reg_es)
did_and_reg_es()
summary(es_reg)
