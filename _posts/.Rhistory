this_smoker <- as.numeric(smokers[i,])
for (j in 1:nrow(nonsmokers)) {
this_nonsmoker <- as.numeric(nonsmokers[j,])
this_diff <- this_smoker - this_nonsmoker
dist <- sum(this_diff^2)
match_quality[j] <- dist
}
match_idx[i] <- which.min(match_quality)
if (i %% 10 == 0) {
cat(i, "\n")
}
}
matched_data <- rbind.data.frame(smokers, nonsmokers[match_idx,])
nrow(matched_data)
match_idx
matched_data %>%
group_by(smoker) %>%
summarize(n=n(),
age=mean(age),
educ=mean(educ),
unmarried=mean(unmarried),
alcohol=mean(alcohol),
drinks=mean(drinks),
tripre1=mean(tripre1),
tripre2=mean(tripre2),
tripre3=mean(tripre3),
tripre0=mean(tripre0),
nprevist=mean(nprevist)
)
smokers$smoker <-1
nonsmokers$smoker <- 0
matched_data <- rbind.data.frame(smokers, nonsmokers[match_idx,])
matched_data %>%
group_by(smoker) %>%
summarize(n=n(),
age=mean(age),
educ=mean(educ),
unmarried=mean(unmarried),
alcohol=mean(alcohol),
drinks=mean(drinks),
tripre1=mean(tripre1),
tripre2=mean(tripre2),
tripre3=mean(tripre3),
tripre0=mean(tripre0),
nprevist=mean(nprevist)
)
matched_data %>%
group_by(smoker) %>%
summarize(n=n(),
age=mean(age),
educ=mean(educ),
unmarried=mean(unmarried),
alcohol=mean(alcohol),
drinks=mean(drinks),
tripre1=mean(tripre1),
tripre2=mean(tripre2),
tripre0=mean(tripre0),
nprevist=mean(nprevist)
)
devtools::install_github("rstudio/packrat")
remove.packages("packrat")
devtools::install_github("rstudio/packrat")
library(packrat)
remove.packages("packrat")
install.packages("packrat")
(-1)^0
X <- rnorm(100)
Y <- rexp(100)
mean(X*Y) - mean(X)*mean(Y)
mean((X-mean(X))*(Y-mean(Y)))
(X-mean(X))^3
mean((X-mean(X))^3)
library(reprex)
data("SchoolingReturns", package="ivreg")
head(SchoolingReturns)
?ivreg
?ivreg::ivreg
iv_res <- ivreg(wage ~ education + experience,
~education + experience,
data=SchoolingReturns)
library(reprex)
library(ivreg)
library(ivreg)
data("SchoolingReturns", package="ivreg")
iv_res <- ivreg(wage ~ education + experience,
~education + experience,
data=SchoolingReturns)
coef(iv_res)
summary(iv_res)
lm(wage ~ education + experience)
lm(wage ~ education + experience, data=SchoolingWage)
lm(wage ~ education + experience, data=SchoolingReturns)
reprex::reprex()
iv_res <- AER::ivreg(wage ~ education + experience,
~education + experience,
data=SchoolingReturns)
coef(iv_res)
summary(iv_res)
coef(iv_res)
iv_res$coefficients
attributes(iv_res)
reprex::reprex()
load("/tmp/fertilizer_panel.RData")
head(fertilizer_panel)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
unique(fertilizer_panel$year)
colnames(fertilizer_panel)
data <- subset(fertilizer_panel, year >= 1980)
data %>% group_by(country) %>%
summarize(median_avfert = median(avfert))
tem <- data %>% group_by(country) %>%
summarize(median_avfert = median(avfert))
tem
med_fert_by_country <- data %>% group_by(country) %>%
summarize(median_avfert = median(avfert))
data <- subset(fertilizer_panel, year >= 1980)
med_fert_by_country <- data %>% group_by(country) %>%
summarize(median_avfert = median(avfert)) %>%
as.data.frame()
med_fert_by_country
mexico <- subset(fertilizer_panel, country=="Mexico")
nrow(mexico)
mexico[,c("year","avfert")]
kable(mexico[,c("year","avfert")])
library(kableExtra)
mexico <- subset(fertilizer_panel, country=="Mexico")
kable(mexico[,c("year","avfert")])
kable(mexico[,c("year","avfert")], booktabs=TRUE) %>%
kable(mexico[,c("year","avfert")], booktabs=TRUE)
library(kableExtra)
mexico <- subset(fertilizer_panel, country=="Mexico")
kable(mexico[,c("year","avfert")], booktabs=TRUE)
kable(as.data.frame(mexico[,c("year","avfert")]), booktabs=TRUE)
kable(as.data.frame(mexico[,c("year","avfert")]), booktabs=TRUE) %>%
kable_styling()
library(kableExtra)
load("~/Dropbox/Courses/Georgia/Undergrad Econometrics/Detailed Course Notes/data/fertilizer_panel.RData")
mexico <- subset(fertilizer_panel, country=="Mexico")
mexico <- mexico[,c("year","avfert")]
rownames(mexico) <- NULL
kable(mexico) %>%
kable_styling()
kable(mexico) %>%
kable_styling(fmt=2)
kable(mexico) %>%
kable_styling() %>%
cell_spec(5, background = "red")
kable(mexico) %>%
kable_styling() %>%
cell_spec(c(1,2), background = "red")
kable(mexico) %>%
kable_styling() %>%
cell_spec(1, color="green")
library(did)
data(mpdta)
out <- att_gt(yname = "lemp",
gname = "first.treat",
idname = "countyreal",
tname = "year",
xformla = ~1,
data = mpdta,
est_method = "reg"
)
ggdid(out)
ggdid(out, ylim=c(-.25,0))
ggdid(out, ylim=c(-.25,.25))
glance(out)
tidy(out)
summary(out)
attributes(summary(out))
attributes(out)
plotdf <- cbind.data.frame(out$group, out$t, out$att, out$se, out$c)
plotdf
plotdf <- cbind.data.frame(group=out$group,
time.period=out$t,
att=out$att,
se=out$se,
crit.val=out$c)
plotdf
plotdf <- cbind.data.frame(group=out$group,
time.period=out$t,
att=out$att,
se=out$se,
crit.val=out$c,
row.names=FALSE)
plotdf <- cbind.data.frame(group=out$group,
time.period=out$t,
att=out$att,
se=out$se,
crit.val=out$c,
row.names=NULL)
plotdf
plotdf$post <- 1*(plotdf$group >= plotdf$time.period)
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_line()
library(ggplot2)
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_line()
plotdf$post <- plotdf$group >= plotdf$time.period
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_line()
plotdf$post <- as.factor(1*(plotdf$group >= plotdf$time.period))
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_line()
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point()
?geom_errorbar
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.cval.se)))
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.cval*se)))
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se)))
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se))) +
facet_wrap(~group)
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se))) +
facet_wrap(group ~ . )
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se))) +
facet_wrap(~group, ncol=1)
?geom_errorbar
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se)),
width=.2) +
facet_wrap(~group, ncol=1)
library(dplyr)
plotdf$post <- as.factor(1*(plotdf$group >= plotdf$time.period))
plotdf$group_name <- case_when(plotdf$group==2004 ~ "First treated group",
plotdf$group==2006 ~ "Second treated group",
plotdf$group==2007 ~ "Third treated group")
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se)),
width=.2) +
facet_wrap(~group_name, ncol=1)
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se)),
width=.1) +
facet_wrap(~group_name, ncol=1) +
theme_bw()
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se)),
width=.1) +
facet_wrap(~group_name, ncol=1) +
theme_classic()
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se)),
width=.1) +
facet_wrap(~group_name, ncol=1) +
theme_bw()
library(reprex)
reprex::reprex()
# create data with no pre-trends
time.periods <- 5
sp <- reset.sim(time.periods=time.periods)
sp <- did::reset.sim(time.periods=time.periods)
devtools::load_all("~/Dropbox/did")
# create data with no pre-trends
time.periods <- 5
sp <- reset.sim(time.periods=time.periods)
sp$te <- 1
#sp$te.e <- -1:(time.periods-2)
data <- build_sim_dataset(sp)
#data <- subset(data, period < time.periods) # drop last period (due to way data is constructed)
res <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr",
anticipation=1
)
#data <- subset(data, period < time.periods) # drop last period (due to way data is constructed)
res1 <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr",
anticipation=1
)
#data <- subset(data, period < time.periods) # drop last period (due to way data is constructed)
res1_varying <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr",
anticipation=1
)
data <- subset(data, G==time.periods | G==0)
# varying base period
res1_varying <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr")
dynamic1_varying <- aggte(res1_varying, type="dynamic")
p1_varying <- ggdid(dynamic1_varying)
# universal base period
res1_universal <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr"
)
# universal base period
res1_universal <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr", base_period="universal"
)
dynamic1_universal <- aggte(res1_universal, type="dynamic")
p1_universal <- ggdid(dynamic1_universal)
ggpubr::ggarrange(p1_varying, p1_universal, nrow=1)
# create data with no pre-trends
time.periods <- 5
sp <- reset.sim(time.periods=time.periods)
sp$te <- 1
#sp$te.e <- -1:(time.periods-2)
data <- build_sim_dataset(sp)
data <- subset(data, G==time.periods | G==0)
# varying base period
res1_varying <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr")
# varying base period
res1_varying <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr")
dynamic1_varying <- aggte(res1_varying, type="dynamic")
dynamic1_varying <- aggte(res1_varying, type="dynamic")
p1_varying <- ggdid(dynamic1_varying)
# universal base period
res1_universal <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr", base_period="universal"
)
# universal base period
res1_universal <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr", base_period="universal"
)
dynamic1_universal <- aggte(res1_universal, type="dynamic")
p1_universal <- ggdid(dynamic1_universal)
ggpubr::ggarrange(p1_varying, p1_universal, nrow=1)
p1_varying <- ggdid(dynamic1_varying, ylim=c(-2,2))
p1_universal <- ggdid(dynamic1_universal, ylim=c(-2,2))
ggpubr::ggarrange(p1_varying, p1_universal, nrow=1)
# treatment anticipation effects
time.periods <- 5
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- -1:(time.periods-2)
data <- build_sim_dataset(sp)
data <- subset(data, G==time.periods | G==0)
# treatment anticipation effects
time.periods <- 5
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- -1:(time.periods-2)
data <- build_sim_dataset(sp)
# add anticipation
data <- subset(data, G==(time.periods-1) | G==0)
data$G[data$G > 0] <- 5
# varying base period
res2_varying <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr")
# varying base period
res2_varying <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr")
dynamic2_varying <- aggte(res2_varying, type="dynamic")
# varying base period
res2_varying <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr")
dynamic2_varying <- aggte(res2_varying, type="dynamic")
p2_varying <- ggdid(dynamic2_varying, ylim=c(-2,2))
dynamic2_universal <- aggte(res2_universal, type="dynamic")
# universal base period
res2_universal <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr", base_period="universal"
)
dynamic2_universal <- aggte(res2_universal, type="dynamic")
p2_universal <- ggdid(dynamic2_universal, ylim=c(-2,2))
ggpubr::ggarrange(p2_varying, p2_universal, nrow=1)
# linear trends
time.periods <- 5
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- -1:(time.periods-2)
data <- build_sim_dataset(sp)
# add anticipation
data <- subset(data, G==2 | G==0)
data$G[data$G > 0] <- 5
# linear trends
time.periods <- 5
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- -1:(time.periods-2)
data <- build_sim_dataset(sp)
# add anticipation
data <- subset(data, G==2 | G==0)
data$G[data$G > 0] <- 5
# varying base period
res3_varying <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr")
# varying base period
res3_varying <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr")
dynamic3_varying <- aggte(res3_varying, type="dynamic")
p3_varying <- ggdid(dynamic3_varying, ylim=c(-2,2))
# universal base period
res3_universal <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr", base_period="universal"
)
# universal base period
res3_universal <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr", base_period="universal"
)
dynamic3_universal <- aggte(res3_universal, type="dynamic")
dynamic3_universal <- aggte(res3_universal, type="dynamic")
p3_universal <- ggdid(dynamic3_universal, ylim=c(-2,2))
ggpubr::ggarrange(p3_varying, p3_universal, nrow=1)
-1:3
# linear trends
time.periods <- 5
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- 1:(time.periods-1)#-1:(time.periods-2)
data <- build_sim_dataset(sp)
# add anticipation
data <- subset(data, G==2 | G==0)
data$G[data$G > 0] <- 5
# varying base period
res3_varying <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr")
dynamic3_varying <- aggte(res3_varying, type="dynamic")
dynamic3_varying <- aggte(res3_varying, type="dynamic")
p3_varying <- ggdid(dynamic3_varying, ylim=c(-2,2))
# universal base period
res3_universal <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr", base_period="universal"
)
# universal base period
res3_universal <- att_gt(yname="Y", xformla=~X, data=data, tname="period",
idname="id",
control_group="nevertreated",
gname="G", est_method="dr", base_period="universal"
)
dynamic3_universal <- aggte(res3_universal, type="dynamic")
p3_universal <- ggdid(dynamic3_universal, ylim=c(-2,2))
dynamic3_universal <- aggte(res3_universal, type="dynamic")
p3_universal <- ggdid(dynamic3_universal, ylim=c(-2,2))
ggpubr::ggarrange(p3_varying, p3_universal, nrow=1)
p3_varying <- ggdid(dynamic3_varying, ylim=c(-5,2))
p3_universal <- ggdid(dynamic3_universal, ylim=c(-5,2))
ggpubr::ggarrange(p3_varying, p3_universal, nrow=1)
dynamic1_universal
dynamic1_varying
dynamic3_varying
dynamic3_universal
library(knitr)
base.dir <- "~/Dropbox/website/"
base.url <- "/"
fig.path <- "files/figures/event-study-universal-v-varying-base-period/"
# set knitr parameters
knitr::opts_knit$set(base.dir = base.dir, base.url = base.url)
kntir::opts_chunk$set(fig.path = fig.path)
knitr::purl("2021-11-09-event_study_universal_v_local_base_period.Rmd")
getwd()
setwd("~/Dropbox/website/_posts")
knitr::purl("2021-11-09-event_study_universal_v_local_base_period.Rmd")
